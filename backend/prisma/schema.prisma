// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  email            String   @unique
  user_name        String?
  last_name        String?
  avatar           String?
  active_user      Boolean
  current_password String
  createdAt        DateTime
  updatedAt        DateTime 
  role             String
  tasks            Task[]
  trips              Trip[]
  userResponsability UserResponsability[]
}

model Task {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  idUser String @db.ObjectId
  user    User   @relation(fields: [idUser], references: [id])
  idList String @db.ObjectId
  list List  @relation(fields: [idList], references: [id])
  idTrip String? @db.ObjectId
  Trip Trip? @relation(fields: [idTrip], references: [id])
  desc String
}

model List{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  tasks            Task[]
}

model Vehicle {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  brand              String
  model              String
  year               Int
  image              String?
  fuelType           String
  licensePlate       String
  mileage            Int
  status             Boolean
  maintenances       Maintenance[]
  trips              Trip[]
  documents          Document[]
  tires              Tire[]
  fuelConsumptions   FuelConsumption[]
  Warranty   Warranty[]
  userResponsability UserResponsability[]
}

model Trip {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  startDate          String
  userId             String @db.ObjectId
  endDate            String
  distanceTraveled   Float
  travelTime         Float
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
  user            User    @relation(fields: [userId], references: [id])
  optimizedRoute     OptimizedRoute[]
  tasks            Task[]
}
model UserResponsability {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  userId             String @db.ObjectId
  estado Boolean
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
  user            User    @relation(fields: [userId], references: [id])
}

model Maintenance {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  type               String
  date               String
  description        String
  cost               Float
  status             String
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
}



model Document {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  type               String
  documentName       String
  expirationDate     String
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
}

model Tire {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  brand              String
  model              String
  installationDate   String
  mileage            Int
  wear               Float
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
}

model FuelConsumption {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId          String @db.ObjectId
  date               String
  quantity           Float
  cost               Float
  efficiency         Float
  vehicle            Vehicle    @relation(fields: [vehicleId], references: [id])
}

model OptimizedRoute {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  tripId             String @db.ObjectId
  pointsOfInterest   String
  totalDistance      Float
  estimatedDuration  Float
  trip               Trip       @relation(fields: [tripId], references: [id])
}


model Warranty {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleId           String @db.ObjectId
  start_date  	      String
  end_date            String
  vehicle               Vehicle       @relation(fields: [vehicleId], references: [id])
}
